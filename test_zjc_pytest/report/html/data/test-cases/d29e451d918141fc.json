{
  "uid" : "d29e451d918141fc",
  "name" : "test_01",
  "fullName" : "case.zjc.test_3_invoice.TestInvoice#test_01",
  "historyId" : "2d4ac25737a7222fb923788e144f2bca",
  "time" : {
    "start" : 1566978192670,
    "stop" : 1566978192670,
    "duration" : 0
  },
  "description" : "新增发票",
  "descriptionHtml" : "<p>新增发票</p>\n",
  "status" : "broken",
  "statusMessage" : "Exception: 元素未找到",
  "statusTrace" : "self = <pageObject.zjc.loginPage.LoginPage object at 0x0000025386349080>\nselector = ('id', 'username'), time = 10\n\n    def find_element(self,selector,time=10):   #查找元素\n        try:\n>           element=WebDriverWait(self.driver,time).until(EC.presence_of_element_located(selector))\n\npublic\\basePage.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1f41976b-0ee6-4f06-b080-acba0602b454\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000025386349630>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\programs\\python\\python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1f41976b-0ee6-4f06-b080-acba0602b454\")>\nuser = 'a100048', psw = 'zjc123456789'\n\n    @pytest.fixture()\n    def login_pur(driver,user='a100048',psw='zjc123456789'):\n        login_page=loginPage.LoginPage(driver)\n>       login_page.pur_login(user,psw)\n\ncase\\zjc\\conftest.py:6: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObject\\zjc\\loginPage.py:30: in pur_login\n    self.u_input(username)\npageObject\\zjc\\loginPage.py:20: in u_input\n    self.send_keys(self.selector_user,username)\npublic\\basePage.py:102: in send_keys\n    element=self.find_element(selector)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageObject.zjc.loginPage.LoginPage object at 0x0000025386349080>\nselector = ('id', 'username'), time = 10\n\n    def find_element(self,selector,time=10):   #查找元素\n        try:\n            element=WebDriverWait(self.driver,time).until(EC.presence_of_element_located(selector))\n            self.driver.execute_script(\"arguments[0].style.border='2px solid red'\", element)\n            sleep(1)\n            mylog.info(u\"定位元素成功——%s\" % selector[1])\n            return element\n        except Exception :\n            mylog.error(u\"定位元素失败——%s\" %selector[1])\n            self.get_screen()\n>           raise Exception('元素未找到')\nE           Exception: 元素未找到\n\npublic\\basePage.py:68: Exception",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1566978123100,
      "stop" : 1566978136138,
      "duration" : 13038
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "login_pur",
    "time" : {
      "start" : 1566978192672,
      "stop" : 1566978204568,
      "duration" : 11896
    },
    "status" : "broken",
    "statusMessage" : "Exception: 元素未找到\n",
    "statusTrace" : "  File \"c:\\programs\\python\\python36\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\programs\\python\\python36\\lib\\site-packages\\_pytest\\fixtures.py\", line 918, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"c:\\programs\\python\\python36\\lib\\site-packages\\_pytest\\fixtures.py\", line 778, in call_fixture_func\n    res = fixturefunc(**kwargs)\n  File \"C:\\gitStore\\test_zjc_pytest\\case\\zjc\\conftest.py\", line 6, in login_pur\n    login_page.pur_login(user,psw)\n  File \"C:\\gitStore\\test_zjc_pytest\\pageObject\\zjc\\loginPage.py\", line 30, in pur_login\n    self.u_input(username)\n  File \"C:\\gitStore\\test_zjc_pytest\\pageObject\\zjc\\loginPage.py\", line 20, in u_input\n    self.send_keys(self.selector_user,username)\n  File \"C:\\gitStore\\test_zjc_pytest\\public\\basePage.py\", line 102, in send_keys\n    element=self.find_element(selector)\n  File \"C:\\gitStore\\test_zjc_pytest\\public\\basePage.py\", line 68, in find_element\n    raise Exception('元素未找到')\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "新增发票",
    "status" : "broken",
    "statusMessage" : "Exception: 元素未找到",
    "statusTrace" : "self = <pageObject.zjc.loginPage.LoginPage object at 0x0000025386349080>\nselector = ('id', 'username'), time = 10\n\n    def find_element(self,selector,time=10):   #查找元素\n        try:\n>           element=WebDriverWait(self.driver,time).until(EC.presence_of_element_located(selector))\n\npublic\\basePage.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"1f41976b-0ee6-4f06-b080-acba0602b454\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_element_located object at 0x0000025386349630>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\programs\\python\\python36\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"1f41976b-0ee6-4f06-b080-acba0602b454\")>\nuser = 'a100048', psw = 'zjc123456789'\n\n    @pytest.fixture()\n    def login_pur(driver,user='a100048',psw='zjc123456789'):\n        login_page=loginPage.LoginPage(driver)\n>       login_page.pur_login(user,psw)\n\ncase\\zjc\\conftest.py:6: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObject\\zjc\\loginPage.py:30: in pur_login\n    self.u_input(username)\npageObject\\zjc\\loginPage.py:20: in u_input\n    self.send_keys(self.selector_user,username)\npublic\\basePage.py:102: in send_keys\n    element=self.find_element(selector)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageObject.zjc.loginPage.LoginPage object at 0x0000025386349080>\nselector = ('id', 'username'), time = 10\n\n    def find_element(self,selector,time=10):   #查找元素\n        try:\n            element=WebDriverWait(self.driver,time).until(EC.presence_of_element_located(selector))\n            self.driver.execute_script(\"arguments[0].style.border='2px solid red'\", element)\n            sleep(1)\n            mylog.info(u\"定位元素成功——%s\" % selector[1])\n            return element\n        except Exception :\n            mylog.error(u\"定位元素失败——%s\" %selector[1])\n            self.get_screen()\n>           raise Exception('元素未找到')\nE           Exception: 元素未找到\n\npublic\\basePage.py:68: Exception",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "aa8635c9e54554c4",
      "name" : "log",
      "source" : "aa8635c9e54554c4.txt",
      "type" : "text/plain",
      "size" : 139
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "driver::end",
    "time" : {
      "start" : 1566978269421,
      "stop" : 1566978272260,
      "duration" : 2839
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "case.zjc"
  }, {
    "name" : "suite",
    "value" : "test_3_invoice"
  }, {
    "name" : "subSuite",
    "value" : "TestInvoice"
  }, {
    "name" : "host",
    "value" : "DESKTOP-FL5D3QJ"
  }, {
    "name" : "thread",
    "value" : "16840-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "case.zjc.test_3_invoice"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "d29e451d918141fc.json",
  "parameterValues" : [ ]
}